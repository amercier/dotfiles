#!/usr/bin/env sh

# Open the Github project URL of a directory which is under version control with a
# Github project.
github() {
  if [ ! -d .git ] && ! git rev-parse --git-dir > /dev/null 2>&1
  then
    echo "Not a git repository" >&2
    return 1
  fi

  remote_branch=$(git rev-parse --abbrev-ref --symbolic-full-name '@{u}' 2>/dev/null)
  if [ ! -n "$remote_branch" ]
  then
    echo "Not connected to a remote branch" >&2
    return 1
  fi
  remote_name=$(echo "$remote_branch" | grep -E -o '^[^/]*')
  branch_name=$(echo "$remote_branch" | sed 's/[^/]*\///')

  ssh_remote="$(git remote get-url "$remote_name" 2>/dev/null)"
  if [ -z "$ssh_remote" ]
  then
    echo "$remote_name remote not found" >&2
    return 1
  elif ! echo "$ssh_remote" | grep -q github.com
  then
    echo "Not a Github repository: $ssh_remote" >&2
    return 1
  fi

  github_url=$(echo "$ssh_remote" | sed 's/^git@github.com:/https:\/\/github.com\//')
  github_url=$(echo "$github_url" | sed 's/.git$//')

  # Look for associated PR
  if [ ! "$branch_name" = 'master' ]
  then
    github_pr=$(git show-ref | grep "$(git rev-parse "$remote_branch")" | grep -E " refs/remotes/$remote_name/pr/[0-9]+" | grep -E -o '[0-9]+$')
    if [ -n "$github_pr" ]
    then
      github_url="$github_url/pull/$github_pr"
    else
      github_url="$github_url/tree/$branch_name"
    fi
  fi

  echo "Opening $github_url"
  open "$github_url"
}
