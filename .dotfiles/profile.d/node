#!/usr/bin/env sh

if command_exists node
then
  list_node_packages() {
    node -e "Object.keys(require('./package')['$1'] || {}).map(function(d) { console.log(d); });"
  }

  if command_exists npm
  then
    alias npm-install-latest="sed 's/$/@latest/' | xargs npm install"
    alias npm-upgrade-dep="list_node_packages dependencies | npm-install-latest --save"
    alias npm-upgrade-dev="list_node_packages devDependencies | npm-install-latest --save-dev"
    alias npm-upgrade-peer="list_node_packages peerDependencies | npm-install-latest --save-peer"
    alias npm-upgrade-bundled="list_node_packages bundledDependencies | npm-install-latest --save-bundled"
    alias npm-upgrade-optional="list_node_packages optionalDependencies | npm-install-latest --save-optional"
    alias npm-upgrade="npm-upgrade-dep && npm-upgrade-dev && npm-upgrade-peer && npm-upgrade-bundled && npm-upgrade-optional"
  fi

  if command_exists yarn
  then
    alias yarn-install-latest="sed 's/$/@latest/' | xargs yarn add"
    alias yarn-upgrade-dep="list_node_packages dependencies | yarn-install-latest --save"
    alias yarn-upgrade-dev="list_node_packages devDependencies | yarn-install-latest --save-dev"
    alias yarn-upgrade-peer="list_node_packages peerDependencies | yarn-install-latest --save-peer"
    alias yarn-upgrade-bundled="list_node_packages bundledDependencies | yarn-install-latest --save-bundled"
    alias yarn-upgrade-optional="list_node_packages optionalDependencies | yarn-install-latest --save-optional"
    alias yarn-upgrade="yarn-upgrade-dep && yarn-upgrade-dev && yarn-upgrade-peer && yarn-upgrade-bundled && yarn-upgrade-optional"
  fi
fi
