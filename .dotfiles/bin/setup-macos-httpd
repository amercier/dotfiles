#!/usr/bin/env bash
# shellcheck disable=SC1090
# shellcheck disable=SC1091

set -o errexit
set -o pipefail
set -o nounset
# set -o xtrace

dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

. "$dir/../lib/colors.sh"

filepaths=$(find "$dir/../lib" -type f -not -name '.*' -not -name '*.example' -not -name 'colors.sh')
for filepath in $filepaths
do
  . "$filepath"
  relative_path=$(realpath --relative-to="$dir/../lib" "$filepath")
  echo "$(green ✓) Loaded $(cyan "$relative_path") library"
done
echo

# Stop and uninstall built-in Apache if http is not installed
if ! brew_keg_exists httpd
then
  sudo apachectl stop
  disable_launch_daemon org.apache.httpd
fi

install_or_update_brew_service httpd "" "\
  uncomment 'ServerName www.example.com:8080' /usr/local/etc/httpd/httpd.conf && \
  replace_inline 'ServerName www.example.com:8080' 'ServerName localhost' /usr/local/etc/httpd/httpd.conf && \
  uncomment 'Include /usr/local/etc/httpd/extra/httpd-vhosts.conf' /usr/local/etc/httpd/httpd.conf && \
  replace_inline 'httpd-vhosts.conf$' 'httpd-vhosts.conf.d/*.conf' '/usr/local/etc/httpd/httpd.conf' && \
  uncomment 'LoadModule deflate_module' /usr/local/etc/httpd/httpd.conf && \
  uncomment 'LoadModule expires_module' /usr/local/etc/httpd/httpd.conf && \
  uncomment 'LoadModule macro_module' /usr/local/etc/httpd/httpd.conf && \
  uncomment 'LoadModule rewrite_module' /usr/local/etc/httpd/httpd.conf \
"

# TODO More elegant solution
if [ ! -e /usr/local/etc/httpd/extra/httpd-vhosts.conf.d ]
then
  ln -s "$HOME/.dotfiles/httpd-vhosts.conf.d" /usr/local/etc/httpd/extra/httpd-vhosts.conf.d
fi

# Brew kegs with casks/services dependencies
install_or_update_brew_keg ant # requires java
install_or_update_brew_keg php # requires httpd
install_or_update_brew_keg composer # requires php
install_or_update_brew_keg sqlite # required php

# Apache SSL setup
if [ -e /usr/local/etc/httpd/server.crt ]
then
  echo "$(green ✓) $(cyan Apache SSL) is already configured"
else
  echo "$(blue ▶) Setting up $(cyan Apache SSL)..."
  uncomment 'LoadModule socache_shmcb_module lib/httpd/modules/mod_socache_shmcb.so' /usr/local/etc/httpd/httpd.conf
  uncomment 'LoadModule ssl_module lib/httpd/modules/mod_ssl.so' /usr/local/etc/httpd/httpd.conf
  uncomment 'Include /usr/local/etc/httpd/extra/httpd-ssl.conf' /usr/local/etc/httpd/httpd.conf

  [ ! -e /tmp/server.cnf ] || rm -rf /tmp/server.cnf
  cat /usr/local/etc/openssl/openssl.cnf > /tmp/server.cnf
  printf '[SAN]\nsubjectAltName=DNS:localhost\n' >> /tmp/server.cnf
  openssl req -x509 -sha256 -nodes -days 3650 -newkey rsa:2048 -keyout /usr/local/etc/httpd/server.key -out /usr/local/etc/httpd/server.crt -subj /CN=localhost -reqexts SAN -extensions SAN -config /tmp/server.cnf
  rm -rf /tmp/server.cnf
  echo "Open $(magenta 'chrome://flags/#allow-insecure-localhost') in Google Chrome to disable SSL warnings for localhost."
  open '/Applications/Utilities/Keychain Access.app' /usr/local/etc/httpd/server.crt
  brew services restart httpd
  echo "$(green ✓) Done"
fi

# Apache GZip setup
# TODO Separate function
if [ -e /usr/local/etc/httpd/extra/httpd-deflate.conf ]
then
  echo "$(green ✓) $(cyan Apache deflate module) is already configured"
else
  echo "$(blue ▶) Setting up $(cyan Apache deflate module)..."
  cat <<EOF | trim | tee /usr/local/etc/httpd/extra/httpd-deflate.conf > /dev/null
    <IfModule deflate_module>
      SetOutputFilter DEFLATE

      # You can't compress what is already compressed
      SetEnvIfNoCase Request_URI \\.(?:gif|jpe?g|png)$ no-gzip dont-vary
      SetEnvIfNoCase Request_URI \\.(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary

      # Make proxies work as they should.
      <IfModule headers_module>
        Header append Vary User-Agent
      </IfModule>
    </IfModule>
EOF
  if ! grep -q httpd-deflate /usr/local/etc/httpd/httpd.conf
  then
    printf '\nInclude /usr/local/etc/httpd/extra/httpd-deflate.conf\n' >> /usr/local/etc/httpd/httpd.conf
    brew services restart httpd
  fi
  brew services restart httpd
  echo "$(green ✓) Done"
fi

# PHP
# TODO Separate function
if [ ! -e /usr/local/etc/httpd/extra/httpd-php.conf ]
then
  cat <<EOF | trim | tee /usr/local/etc/httpd/extra/httpd-php.conf > /dev/null
    LoadModule php7_module /usr/local/opt/php/lib/httpd/modules/libphp7.so

    <FilesMatch \\.php$>
        SetHandler application/x-httpd-php
    </FilesMatch>

    DirectoryIndex index.php index.html
EOF
fi

# TODO More elegant solution
pecl list | grep -q xdebug || pecl install xdebug

# TODO More elegant solution
replace_inline 'memory_limit = 128M' 'memory_limit = 1024M' /usr/local/etc/php/7.2/php.ini
if ! grep -q php /usr/local/etc/httpd/httpd.conf
then
  printf '\nInclude /usr/local/etc/httpd/extra/httpd-php.conf\n' >> /usr/local/etc/httpd/httpd.conf
  brew services restart httpd
fi

# Workspace
if [ ! -e "$HOME/Workspace/phpinfo.php" ]
then
  echo '<?php phpinfo(); ?>' > "$HOME/Workspace/phpinfo.php"
fi
