#!/usr/bin/env sh

ANSI_CODES="
reset 0 0
bold 1 22
dim 2 22
italic 3 23
underline 4 24
inverse 7 27
hidden 8 28
strikethrough 9 29
black 30 39
red 31 39
green 32 39
yellow 33 39
blue 34 39
magenta 35 39
cyan 36 39
white 37 39
gray 90 39
red_bright 91 39
green_bright 92 39
yellow_bright 93 39
blue_bright 94 39
magenta_bright 95 39
cyan_bright 96 39
white_bright 97 39
bg_black 40 49
bg_red 41 49
bg_green 42 49
bg_yellow 43 49
bg_blue 44 49
bg_magenta 45 49
bg_cyan 46 49
bg_white 47 49
bg_black_bright 100 49
bg_red_bright 101 49
bg_green_bright 102 49
bg_yellow_bright 103 49
bg_blue_bright 104 49
bg_magenta_bright 105 49
bg_cyan_bright 106 49
bg_white_bright 107 49
"

ansi_printf() {
  colors=$1
  if [ -n "$(echo $colors | grep ' ' 2>/dev/null)" ]
  then
    color=$(echo $colors | tr ' ' '\n' | head -n 1)
    nested_colors=$(echo "$colors" | sed 's/[^ ]* //')
    shift # short for shift 1
    nested=$(ansi_printf "$nested_colors" "$@")
    ansi_printf "$(echo $color | head -n 1)" "$nested"
  else
    color_codes=$(echo $ANSI_CODES | egrep "^$colors ")
    printf "\u001B[$(echo $color_codes | sed 's/.* \([0-9]*\) .*/\1/')m" # Color start
    shift # short for shift 1
    for i do printf "$i"; done
    printf "\u001B[$(echo $color_codes | egrep -o '[0-9]+$')m" # Color stop
  fi
}

ansi_echo() {
  echo "$(ansi_printf "$@")"
}
